# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: btwanapi.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='btwanapi.proto',
  package='btwan',
  syntax='proto3',
  serialized_pb=_b('\n\x0e\x62twanapi.proto\x12\x05\x62twan\"\x06\n\x04Void\"\"\n\x08InfoHash\x12\n\n\x02ih\x18\x01 \x01(\t\x12\n\n\x02ID\x18\x02 \x01(\x04\"(\n\x08\x46ileInfo\x12\x0c\n\x04path\x18\x01 \x03(\t\x12\x0e\n\x06length\x18\x02 \x01(\x04\"\xfa\x01\n\x0cMetadataInfo\x12\n\n\x02ID\x18\x01 \x01(\x04\x12\x10\n\x08infoHash\x18\x02 \x01(\t\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x1e\n\x05\x66iles\x18\x04 \x03(\x0b\x32\x0f.btwan.FileInfo\x12\x0e\n\x06length\x18\x05 \x01(\x04\x12\x13\n\x0b\x63ollectTime\x18\x06 \x01(\x03\x12\x11\n\tindexTime\x18\x07 \x01(\x03\x12\x0e\n\x06\x64\x65gree\x18\x08 \x01(\x04\x12\x0f\n\x07reviews\x18\t \x01(\x04\x12\x0f\n\x07\x66ollows\x18\n \x01(\x04\x12\x0e\n\x06thumbs\x18\x0b \x01(\x04\x12\x0f\n\x07seeders\x18\x0c \x01(\x04\x12\x13\n\x0b\x64ownloaders\x18\r \x01(\x04\"5\n\tSearchReq\x12\t\n\x01q\x18\x01 \x01(\t\x12\x0e\n\x06offset\x18\x02 \x01(\r\x12\r\n\x05limit\x18\x03 \x01(\r\"\x88\x01\n\nSearchResp\x12!\n\x07request\x18\x01 \x01(\x0b\x32\x10.btwan.SearchReq\x12\x12\n\ntotalCount\x18\x02 \x01(\r\x12\r\n\x05\x63ount\x18\x03 \x01(\r\x12\x0c\n\x04took\x18\x04 \x01(\r\x12&\n\tmetainfos\x18\x05 \x03(\x0b\x32\x13.btwan.MetadataInfo\"z\n\x05\x45vent\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x30\n\nattributes\x18\x02 \x03(\x0b\x32\x1c.btwan.Event.AttributesEntry\x1a\x31\n\x0f\x41ttributesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x32\xa7\x02\n\x0eOwstoniService\x12%\n\x04Send\x12\x0c.btwan.Event\x1a\x0b.btwan.Void\"\x00(\x01\x12%\n\x04Recv\x12\x0b.btwan.Void\x1a\x0c.btwan.Event\"\x00\x30\x01\x12.\n\x0cSendInfoHash\x12\x0f.btwan.InfoHash\x1a\x0b.btwan.Void\"\x00\x12\x39\n\x0fGetMetadataInfo\x12\x0f.btwan.InfoHash\x1a\x13.btwan.MetadataInfo\"\x00\x12+\n\x05Index\x12\x13.btwan.MetadataInfo\x1a\x0b.btwan.Void\"\x00\x12/\n\x06Search\x12\x10.btwan.SearchReq\x1a\x11.btwan.SearchResp\"\x00\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_VOID = _descriptor.Descriptor(
  name='Void',
  full_name='btwan.Void',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=25,
  serialized_end=31,
)


_INFOHASH = _descriptor.Descriptor(
  name='InfoHash',
  full_name='btwan.InfoHash',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ih', full_name='btwan.InfoHash.ih', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ID', full_name='btwan.InfoHash.ID', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=33,
  serialized_end=67,
)


_FILEINFO = _descriptor.Descriptor(
  name='FileInfo',
  full_name='btwan.FileInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='btwan.FileInfo.path', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='length', full_name='btwan.FileInfo.length', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=69,
  serialized_end=109,
)


_METADATAINFO = _descriptor.Descriptor(
  name='MetadataInfo',
  full_name='btwan.MetadataInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ID', full_name='btwan.MetadataInfo.ID', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='infoHash', full_name='btwan.MetadataInfo.infoHash', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='btwan.MetadataInfo.name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='files', full_name='btwan.MetadataInfo.files', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='length', full_name='btwan.MetadataInfo.length', index=4,
      number=5, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='collectTime', full_name='btwan.MetadataInfo.collectTime', index=5,
      number=6, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='indexTime', full_name='btwan.MetadataInfo.indexTime', index=6,
      number=7, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='degree', full_name='btwan.MetadataInfo.degree', index=7,
      number=8, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='reviews', full_name='btwan.MetadataInfo.reviews', index=8,
      number=9, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='follows', full_name='btwan.MetadataInfo.follows', index=9,
      number=10, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='thumbs', full_name='btwan.MetadataInfo.thumbs', index=10,
      number=11, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='seeders', full_name='btwan.MetadataInfo.seeders', index=11,
      number=12, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='downloaders', full_name='btwan.MetadataInfo.downloaders', index=12,
      number=13, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=112,
  serialized_end=362,
)


_SEARCHREQ = _descriptor.Descriptor(
  name='SearchReq',
  full_name='btwan.SearchReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='q', full_name='btwan.SearchReq.q', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='offset', full_name='btwan.SearchReq.offset', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='limit', full_name='btwan.SearchReq.limit', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=364,
  serialized_end=417,
)


_SEARCHRESP = _descriptor.Descriptor(
  name='SearchResp',
  full_name='btwan.SearchResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='request', full_name='btwan.SearchResp.request', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='totalCount', full_name='btwan.SearchResp.totalCount', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='count', full_name='btwan.SearchResp.count', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='took', full_name='btwan.SearchResp.took', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='metainfos', full_name='btwan.SearchResp.metainfos', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=420,
  serialized_end=556,
)


_EVENT_ATTRIBUTESENTRY = _descriptor.Descriptor(
  name='AttributesEntry',
  full_name='btwan.Event.AttributesEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='btwan.Event.AttributesEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='btwan.Event.AttributesEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=631,
  serialized_end=680,
)

_EVENT = _descriptor.Descriptor(
  name='Event',
  full_name='btwan.Event',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='btwan.Event.type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='attributes', full_name='btwan.Event.attributes', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_EVENT_ATTRIBUTESENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=558,
  serialized_end=680,
)

_METADATAINFO.fields_by_name['files'].message_type = _FILEINFO
_SEARCHRESP.fields_by_name['request'].message_type = _SEARCHREQ
_SEARCHRESP.fields_by_name['metainfos'].message_type = _METADATAINFO
_EVENT_ATTRIBUTESENTRY.containing_type = _EVENT
_EVENT.fields_by_name['attributes'].message_type = _EVENT_ATTRIBUTESENTRY
DESCRIPTOR.message_types_by_name['Void'] = _VOID
DESCRIPTOR.message_types_by_name['InfoHash'] = _INFOHASH
DESCRIPTOR.message_types_by_name['FileInfo'] = _FILEINFO
DESCRIPTOR.message_types_by_name['MetadataInfo'] = _METADATAINFO
DESCRIPTOR.message_types_by_name['SearchReq'] = _SEARCHREQ
DESCRIPTOR.message_types_by_name['SearchResp'] = _SEARCHRESP
DESCRIPTOR.message_types_by_name['Event'] = _EVENT

Void = _reflection.GeneratedProtocolMessageType('Void', (_message.Message,), dict(
  DESCRIPTOR = _VOID,
  __module__ = 'btwanapi_pb2'
  # @@protoc_insertion_point(class_scope:btwan.Void)
  ))
_sym_db.RegisterMessage(Void)

InfoHash = _reflection.GeneratedProtocolMessageType('InfoHash', (_message.Message,), dict(
  DESCRIPTOR = _INFOHASH,
  __module__ = 'btwanapi_pb2'
  # @@protoc_insertion_point(class_scope:btwan.InfoHash)
  ))
_sym_db.RegisterMessage(InfoHash)

FileInfo = _reflection.GeneratedProtocolMessageType('FileInfo', (_message.Message,), dict(
  DESCRIPTOR = _FILEINFO,
  __module__ = 'btwanapi_pb2'
  # @@protoc_insertion_point(class_scope:btwan.FileInfo)
  ))
_sym_db.RegisterMessage(FileInfo)

MetadataInfo = _reflection.GeneratedProtocolMessageType('MetadataInfo', (_message.Message,), dict(
  DESCRIPTOR = _METADATAINFO,
  __module__ = 'btwanapi_pb2'
  # @@protoc_insertion_point(class_scope:btwan.MetadataInfo)
  ))
_sym_db.RegisterMessage(MetadataInfo)

SearchReq = _reflection.GeneratedProtocolMessageType('SearchReq', (_message.Message,), dict(
  DESCRIPTOR = _SEARCHREQ,
  __module__ = 'btwanapi_pb2'
  # @@protoc_insertion_point(class_scope:btwan.SearchReq)
  ))
_sym_db.RegisterMessage(SearchReq)

SearchResp = _reflection.GeneratedProtocolMessageType('SearchResp', (_message.Message,), dict(
  DESCRIPTOR = _SEARCHRESP,
  __module__ = 'btwanapi_pb2'
  # @@protoc_insertion_point(class_scope:btwan.SearchResp)
  ))
_sym_db.RegisterMessage(SearchResp)

Event = _reflection.GeneratedProtocolMessageType('Event', (_message.Message,), dict(

  AttributesEntry = _reflection.GeneratedProtocolMessageType('AttributesEntry', (_message.Message,), dict(
    DESCRIPTOR = _EVENT_ATTRIBUTESENTRY,
    __module__ = 'btwanapi_pb2'
    # @@protoc_insertion_point(class_scope:btwan.Event.AttributesEntry)
    ))
  ,
  DESCRIPTOR = _EVENT,
  __module__ = 'btwanapi_pb2'
  # @@protoc_insertion_point(class_scope:btwan.Event)
  ))
_sym_db.RegisterMessage(Event)
_sym_db.RegisterMessage(Event.AttributesEntry)


_EVENT_ATTRIBUTESENTRY.has_options = True
_EVENT_ATTRIBUTESENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class OwstoniServiceStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Send = channel.stream_unary(
        '/btwan.OwstoniService/Send',
        request_serializer=Event.SerializeToString,
        response_deserializer=Void.FromString,
        )
    self.Recv = channel.unary_stream(
        '/btwan.OwstoniService/Recv',
        request_serializer=Void.SerializeToString,
        response_deserializer=Event.FromString,
        )
    self.SendInfoHash = channel.unary_unary(
        '/btwan.OwstoniService/SendInfoHash',
        request_serializer=InfoHash.SerializeToString,
        response_deserializer=Void.FromString,
        )
    self.GetMetadataInfo = channel.unary_unary(
        '/btwan.OwstoniService/GetMetadataInfo',
        request_serializer=InfoHash.SerializeToString,
        response_deserializer=MetadataInfo.FromString,
        )
    self.Index = channel.unary_unary(
        '/btwan.OwstoniService/Index',
        request_serializer=MetadataInfo.SerializeToString,
        response_deserializer=Void.FromString,
        )
    self.Search = channel.unary_unary(
        '/btwan.OwstoniService/Search',
        request_serializer=SearchReq.SerializeToString,
        response_deserializer=SearchResp.FromString,
        )


class OwstoniServiceServicer(object):

  def Send(self, request_iterator, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Recv(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendInfoHash(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetMetadataInfo(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Index(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Search(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_OwstoniServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Send': grpc.stream_unary_rpc_method_handler(
          servicer.Send,
          request_deserializer=Event.FromString,
          response_serializer=Void.SerializeToString,
      ),
      'Recv': grpc.unary_stream_rpc_method_handler(
          servicer.Recv,
          request_deserializer=Void.FromString,
          response_serializer=Event.SerializeToString,
      ),
      'SendInfoHash': grpc.unary_unary_rpc_method_handler(
          servicer.SendInfoHash,
          request_deserializer=InfoHash.FromString,
          response_serializer=Void.SerializeToString,
      ),
      'GetMetadataInfo': grpc.unary_unary_rpc_method_handler(
          servicer.GetMetadataInfo,
          request_deserializer=InfoHash.FromString,
          response_serializer=MetadataInfo.SerializeToString,
      ),
      'Index': grpc.unary_unary_rpc_method_handler(
          servicer.Index,
          request_deserializer=MetadataInfo.FromString,
          response_serializer=Void.SerializeToString,
      ),
      'Search': grpc.unary_unary_rpc_method_handler(
          servicer.Search,
          request_deserializer=SearchReq.FromString,
          response_serializer=SearchResp.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'btwan.OwstoniService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaOwstoniServiceServicer(object):
  def Send(self, request_iterator, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def Recv(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def SendInfoHash(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def GetMetadataInfo(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def Index(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def Search(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaOwstoniServiceStub(object):
  def Send(self, request_iterator, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  Send.future = None
  def Recv(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  def SendInfoHash(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  SendInfoHash.future = None
  def GetMetadataInfo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  GetMetadataInfo.future = None
  def Index(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  Index.future = None
  def Search(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  Search.future = None


def beta_create_OwstoniService_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  request_deserializers = {
    ('btwan.OwstoniService', 'GetMetadataInfo'): InfoHash.FromString,
    ('btwan.OwstoniService', 'Index'): MetadataInfo.FromString,
    ('btwan.OwstoniService', 'Recv'): Void.FromString,
    ('btwan.OwstoniService', 'Search'): SearchReq.FromString,
    ('btwan.OwstoniService', 'Send'): Event.FromString,
    ('btwan.OwstoniService', 'SendInfoHash'): InfoHash.FromString,
  }
  response_serializers = {
    ('btwan.OwstoniService', 'GetMetadataInfo'): MetadataInfo.SerializeToString,
    ('btwan.OwstoniService', 'Index'): Void.SerializeToString,
    ('btwan.OwstoniService', 'Recv'): Event.SerializeToString,
    ('btwan.OwstoniService', 'Search'): SearchResp.SerializeToString,
    ('btwan.OwstoniService', 'Send'): Void.SerializeToString,
    ('btwan.OwstoniService', 'SendInfoHash'): Void.SerializeToString,
  }
  method_implementations = {
    ('btwan.OwstoniService', 'GetMetadataInfo'): face_utilities.unary_unary_inline(servicer.GetMetadataInfo),
    ('btwan.OwstoniService', 'Index'): face_utilities.unary_unary_inline(servicer.Index),
    ('btwan.OwstoniService', 'Recv'): face_utilities.unary_stream_inline(servicer.Recv),
    ('btwan.OwstoniService', 'Search'): face_utilities.unary_unary_inline(servicer.Search),
    ('btwan.OwstoniService', 'Send'): face_utilities.stream_unary_inline(servicer.Send),
    ('btwan.OwstoniService', 'SendInfoHash'): face_utilities.unary_unary_inline(servicer.SendInfoHash),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_OwstoniService_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  request_serializers = {
    ('btwan.OwstoniService', 'GetMetadataInfo'): InfoHash.SerializeToString,
    ('btwan.OwstoniService', 'Index'): MetadataInfo.SerializeToString,
    ('btwan.OwstoniService', 'Recv'): Void.SerializeToString,
    ('btwan.OwstoniService', 'Search'): SearchReq.SerializeToString,
    ('btwan.OwstoniService', 'Send'): Event.SerializeToString,
    ('btwan.OwstoniService', 'SendInfoHash'): InfoHash.SerializeToString,
  }
  response_deserializers = {
    ('btwan.OwstoniService', 'GetMetadataInfo'): MetadataInfo.FromString,
    ('btwan.OwstoniService', 'Index'): Void.FromString,
    ('btwan.OwstoniService', 'Recv'): Event.FromString,
    ('btwan.OwstoniService', 'Search'): SearchResp.FromString,
    ('btwan.OwstoniService', 'Send'): Void.FromString,
    ('btwan.OwstoniService', 'SendInfoHash'): Void.FromString,
  }
  cardinalities = {
    'GetMetadataInfo': cardinality.Cardinality.UNARY_UNARY,
    'Index': cardinality.Cardinality.UNARY_UNARY,
    'Recv': cardinality.Cardinality.UNARY_STREAM,
    'Search': cardinality.Cardinality.UNARY_UNARY,
    'Send': cardinality.Cardinality.STREAM_UNARY,
    'SendInfoHash': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'btwan.OwstoniService', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
